@using NewLife;
@using XCode;
@using XCode.Configuration;
@{
    var pair = Model as Pair;
    var entity = pair.First as IEntity;
    var item = pair.Second as FieldItem;

    var width = 2;
    switch (Type.GetTypeCode(item.Type))
    {
        case TypeCode.Boolean:
            width = 2;
            break;
        case TypeCode.String:
            width = 6;
            break;
    }

    var des = item.Description.TrimStart(item.DisplayName).TrimStart("。");
}
<label class="control-label col-md-2">@item.DisplayName</label>
<div class="input-group col-md-@width">
    @if (item.Name.EqualIgnoreCase("CreateUserID", "UpdateUserID"))
    {
        @Html.Label(item.Name)
    }
    else
    {
        if (item.Type == typeof(String) && (item.Length <= 0 || item.Length > 300))
        {
            @Html.ForString(item.Name, (String)entity[item.Name], item.Length)
        }
        else
        {
            @Html.ForEditor(item.Name, entity[item.Name], item.Type)
        }
        if (!des.IsNullOrWhiteSpace())
        {
            <p class="help-block">@des</p>
        }
    }
</div>