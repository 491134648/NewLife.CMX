#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using NewLife;
    using NewLife.CMX;
    using NewLife.CMX.Web;
    using NewLife.Cube;
    using NewLife.Reflection;
    using NewLife.Web;
    using XCode;
    using XCode.Membership;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Text/Title.cshtml")]
    public partial class _Views_Text_Title_cshtml : System.Web.Mvc.WebViewPage<NewLife.CMX.IEntityTitle>
    {
        public _Views_Text_Title_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Text\Title.cshtml"
  
    var Channel = ViewBag.Channel as Channel;
    var Category = ViewBag.Category as IEntityCategory;

    this.PushTitle(Model.Category.Name);
    this.PushTitle(Model.Title);

    var paths = new List<String>();
    var templateCategory = Category;
    do
    {
        paths.Add(templateCategory.Name);
        templateCategory = templateCategory.Parent as IEntityCategory;
    } while (templateCategory != null);
    paths.Reverse();

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <em>所在位置：</em> <span>\r\n            <a");

WriteLiteral(" href=\"/\"");

WriteLiteral(">首页</a>\r\n            &nbsp;\r\n");

            
            #line 23 "..\..\Views\Text\Title.cshtml"
            
            
            #line default
            #line hidden
            
            #line 23 "..\..\Views\Text\Title.cshtml"
             foreach (var title in paths)
            {

            
            #line default
            #line hidden
WriteLiteral("                <span>&gt;");

            
            #line 25 "..\..\Views\Text\Title.cshtml"
                     Write(title);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 26 "..\..\Views\Text\Title.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </span>\r\n    </div>\r\n\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <h2");

WriteLiteral(" class=\"text-center\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 32 "..\..\Views\Text\Title.cshtml"
       Write(Model.Title);

            
            #line default
            #line hidden
WriteLiteral("\r\n        </h2>\r\n        <div");

WriteLiteral(" class=\"content\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 35 "..\..\Views\Text\Title.cshtml"
       Write(Html.Raw(Model.ContentText));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n</div>");

        }
    }
}
#pragma warning restore 1591
